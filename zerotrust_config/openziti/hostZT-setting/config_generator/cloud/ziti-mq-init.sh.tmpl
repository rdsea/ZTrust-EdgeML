#!/bin/bash

set -euo pipefail

# ==============================================================================
# FUNCTIONS
# ==============================================================================

# Source the common functions
# shellcheck source=common.sh.tmpl
# source "../scripts/common.sh"


# --- Log a message ---
log() {
  echo ">>> $(date '+%Y-%m-%d %H:%M:%S') - $1"
}

set_ziti_variables() {
  log "Setting Ziti environment variables"
  export ZITI_HOME="/opt/openziti"
  export ZITI_CTRL_ADVERTISED_ADDRESS="ctrl.cloud.hong3nguyen.com"
  export ZITI_CTRL_ADVERTISED_PORT="1280"
  export ZITI_USER="admin"
  export ZITI_PWD="admin"
  export ZITI_DIR="/home/hong3nguyen"
}

# --- Install Ziti CLI ---
install_ziti_cli() {
  log "Installing Ziti CLI"
  if ! command -v ziti &>/dev/null; then
    source /etc/os-release
    curl -sSL "https://get.openziti.io/install-ziti-cli-functions.sh" | bash -s "$ZITI_CLI_VERSION"
    log "Ziti CLI installed."
  else
    log "Ziti CLI is already installed."
  fi
}

# --- Install Ziti Edge Tunnel ---
install_ziti_edge_tunnel() {
  log "Installing Ziti Edge Tunnel"
  if ! command -v ziti-edge-tunnel &>/dev/null; then
    source /etc/os-release
    curl -sSL "https://get.openziti.io/install-ziti-edge-tunnel-functions.sh" | bash -s "$ZITI_TUNNEL_VERSION"
    log "Ziti Edge Tunnel installed."
  else
    log "Ziti Edge Tunnel is already installed."
  fi
}

# --- Add Ziti DNS entries to /etc/hosts ---
add_ziti_dns_entries() {
  log "Adding Ziti DNS entries to /etc/hosts"
  local cloud_ip="$1"
  local edge_ip="$2"
  
  # Ensure the entries are not already present
  if ! grep -q "ctrl.cloud.hong3nguyen.com" /etc/hosts; then
    echo "$cloud_ip ctrl.cloud.hong3nguyen.com" | sudo tee -a /etc/hosts
    echo "$cloud_ip router.cloud.hong3nguyen.com" | sudo tee -a /etc/hosts
  fi
    echo "$edge_ip router.edge.hong3nguyen.com" | sudo tee -a /etc/hosts
    if ! grep -q "router.edge.hong3nguyen.com" /etc/hosts; then
  fi
}

# --- Create and enroll a Ziti identity ---
create_and_enroll_identity() {
  local identity_name="$1"
  local identity_roles="$2"
  local jwt_file="/home/hong3nguyen/$1.jwt"
  local json_file="/home/hong3nguyen/$1.json"

  log "Creating and enrolling identity: $1"
  
  export ZITI_HOME="/opt/openziti"

  "/opt/openziti/bin/ziti" edge login "https://ctrl.cloud.hong3nguyen.com:1280" --yes -u "admin" -p "admin"
  
  "/opt/openziti/bin/ziti" edge create identity device "$1" -a "$2" --jwt-output-file "/home/hong3nguyen/$1.jwt"
  
 "/opt/openziti/bin/ziti" edge enroll --jwt "/home/hong3nguyen/$1.jwt" --out "/home/hong3nguyen/$1.json"
  
  echo "/home/hong3nguyen/$1.json"
}

install_rabbitmq() {
  log "Installing RabbitMQ"
  apt-get update -y
  apt-get install -y curl gnupg apt-transport-https

  # Add RabbitMQ signing keys
  curl -1sLf "https://keys.openpgp.org/vks/v1/by-fingerprint/0A9AF2115F4687BD29803A206B73A36E6026DFCA" | gpg --dearmor > /usr/share/keyrings/com.rabbitmq.team.gpg
  curl -1sLf https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-erlang.E495BB49CC4BBE5B.key | gpg --dearmor > /usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg
  curl -1sLf https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-server.9F4587F226208342.key | gpg --dearmor > /usr/share/keyrings/rabbitmq.9F4587F226208342.gpg

  # Add RabbitMQ apt repositories
  tee /etc/apt/sources.list.d/rabbitmq.list <<EOF
deb [arch=amd64 signed-by=/usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg] https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-erlang/deb/ubuntu jammy main
deb [arch=amd64 signed-by=/usr/share/keyrings/rabbitmq.9F4587F226208342.gpg] https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-server/deb/ubuntu jammy main
EOF

  # Install Erlang and RabbitMQ
  apt-get update -y
  apt-get install -y erlang-base erlang-crypto erlang-inets erlang-mnesia erlang-os-mon erlang-public-key erlang-runtime-tools erlang-ssl erlang-syntax-tools erlang-tools rabbitmq-server --fix-missing
}

# --- Configure RabbitMQ ---
configure_rabbitmq() {
  log "Configuring RabbitMQ"
  mkdir -p /etc/rabbitmq

  tee /etc/rabbitmq/rabbitmq.conf >/dev/null <<EOF
listeners.tcp.default = 0.0.0.0:5672
management.listener.port = 15672
EOF

  tee /etc/rabbitmq/rabbitmq-env.conf >/dev/null <<EOF
RABBITMQ_NODE_PORT=5672
RABBITMQ_NODENAME=rabbitmq@localhost
EOF

  systemctl restart rabbitmq-server
}



# ==============================================================================
# MAIN EXECUTION
# ==============================================================================

main() {
  set_ziti_variables
  install_rabbitmq
  configure_rabbitmq
  # echo "${controller_ip} ctrl.cloud.hong3nguyen.com" | sudo tee -a /etc/hosts
  # add_ziti_dns_entries "" "192.168.edge.test"
  add_ziti_dns_entries "${controller_ip}" "192.168.edge.test"
  install_ziti_edge_tunnel
  setup_application

  # Create and enroll the Ziti identity
  json_file=$(create_and_enroll_identity "message-queue" "message-queue,")

  # Run the tunnel in the background
  nohup ziti-edge-tunnel run -i "/home/hong3nguyen/$1.json" >/var/log/ziti-edge-tunnel.log 2>&1 &

  log "Message Queue setup complete."
}

main "$@"