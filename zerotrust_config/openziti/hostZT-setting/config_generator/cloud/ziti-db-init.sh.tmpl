#!/bin/bash

exec > /var/log/startup-script.log 2>&1
set -x
set -euo pipefail

# Source the common functions
# shellcheck source=common.sh.tmpl
# source "../scripts/common.sh"

# ==============================================================================
# FUNCTIONS
# ==============================================================================
# --- Log a message ---
log() {
  echo ">>> $(date '+%Y-%m-%d %H:%M:%S') - $1"
}

# --- Set up Ziti environment variables ---
set_ziti_variables() {
  log "Setting Ziti environment variables"
  export ZITI_HOME="/opt/openziti"
  export ZITI_CTRL_ADVERTISED_ADDRESS="ctrl.cloud.hong3nguyen.com"
  export ZITI_CTRL_ADVERTISED_PORT="1280"
  export ZITI_USER="admin"
  export ZITI_PWD="admin"
  export ZITI_DIR="/home/hong3nguyen"
  export OPENZITI="true"
}

# --- Install Ziti CLI ---
install_ziti_cli() {
  apt install curl gpg -y
  log "Installing Ziti CLI"
  if ! command -v ziti &>/dev/null; then
    source /etc/os-release
    curl -sS https://get.openziti.io/install.bash | sudo bash -s openziti-router
    log "Ziti CLI installed."
  else
    log "Ziti CLI is already installed."

  fi
}

# --- Install Ziti Edge Tunnel ---
install_ziti_edge_tunnel() {
  log "Installing Ziti Edge Tunnel"
  if ! command -v ziti-edge-tunnel &>/dev/null; then
    curl -sSLf https://get.openziti.io/tun/package-repos.gpg |
    gpg --dearmor --output /usr/share/keyrings/openziti.gpg

    chmod -c +r /usr/share/keyrings/openziti.gpg

    echo "deb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-stable jammy main" |
      tee /etc/apt/sources.list.d/openziti.list >/dev/null

    apt update

    apt install -y ziti-edge-tunnel
    log "Ziti Edge Tunnel installed."
  else
    log "Ziti Edge Tunnel is already installed."
  fi

}

# --- Add Ziti DNS entries to /etc/hosts ---
add_ziti_dns_entries() {
  log "Adding Ziti DNS entries to /etc/hosts"
  local cloud_ip="$1"
  
  # Ensure the entries are not already present
  if ! grep -q "ctrl.cloud.hong3nguyen.com" /etc/hosts; then
    echo "$cloud_ip ctrl.cloud.hong3nguyen.com" | sudo tee -a /etc/hosts
    echo "$cloud_ip router.cloud.hong3nguyen.com" | sudo tee -a /etc/hosts
  fi
  
  if ! grep -q "router.edge.hong3nguyen.com" /etc/hosts; then
    echo "130.233.195.219 router.edge.hong3nguyen.com" | sudo tee -a /etc/hosts
  fi
  
}

# --- Create and enroll a Ziti identity ---
create_and_enroll_identity() {
  local identity_name="$1"
  local identity_roles="$2"
  local jwt_file="/home/hong3nguyen/$1.jwt"
  local json_file="/home/hong3nguyen/$1.json"

  log "Creating and enrolling identity: $1"
  
  export ZITI_HOME="/opt/openziti"

  $ZITI_HOME/bin/ziti edge login https://ctrl.cloud.hong3nguyen.com:1280 --yes -u admin -p admin
  
  $ZITI_HOME/bin/ziti edge create identity device $identity_name -a $identity_roles --jwt-output-file $jwt_file
  
  $ZITI_HOME/bin/ziti edge enroll --jwt $jwt_file --out $json_file
  
}


# --- Install MongoDB ---
install_mongodb() {
  log "Installing MongoDB"
  sudo apt-get update -y
  sudo apt-get install -y gnupg curl


  curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc |
    sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg \
      --dearmor

  echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list

  sudo apt-get update -y 
  sudo apt-get install -y mongodb-org
  sudo systemctl start mongod
  sudo systemctl daemon-reload
  sudo systemctl enable mongod

}

# --- Configure MongoDB ---
configure_mongodb() {
  log "Configuring MongoDB"
  mkdir -p /home/hong3nguyen/data/db
  sudo chown -R mongodb:mongodb /home/hong3nguyen/data/db
  sudo chmod 755 /home
  sudo chmod 755 /home/hong3nguyen
  sudo chmod 755 /home/hong3nguyen/data

  sudo tee /etc/mongod.conf >/dev/null <<EOF
net:
  bindIp: 0.0.0.0
  port: 27017
storage:
  dbPath: /home/hong3nguyen/data/db
systemLog:
  destination: file
  path: /var/log/mongodb/mongod.log
  logAppend: true
EOF

  sudo systemctl restart mongod

  # Create admin user
  log "Creating MongoDB admin user"
  
  
  
  
  mongosh <<EOF
  use admin
  db.createUser({
    user: "hong3nguyen",
    pwd: "ZT_aaltosea",
    roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
  })
EOF
  

  # Enable auth
  sudo sed -i '/^#*security:/a\  authorization: enabled' /etc/mongod.conf

  sudo systemctl restart mongod
}

# ==============================================================================
# MAIN EXECUTION
# ==============================================================================

main() {
  set_ziti_variables
  install_mongodb
  configure_mongodb
  add_ziti_dns_entries "${controller_ip}" 

  install_ziti_edge_tunnel
  install_ziti_cli

  # Create and enroll the Ziti identity
  create_and_enroll_identity "database" "database,cloud"

  # Run the tunnel in the background
  nohup ziti-edge-tunnel run -i "/home/hong3nguyen/database.json"  >/var/log/ziti-edge-tunnel.log 2>&1 &

  log "Database setup complete."
}

main "$@"
echo ">>> $(date '+%Y-%m-%d %H:%M:%S') - STARTUP SCRIPT COMPLETED"
