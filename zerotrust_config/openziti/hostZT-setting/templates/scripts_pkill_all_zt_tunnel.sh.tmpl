#!/bin/bash

set -uo pipefail

{% for vm in vms %}
{{ vm.name | replace('-', '_') | upper }}_IP=$(cd ../cloud/ && terraform output -raw {{ vm.name | replace('-', '_') }}_ip)
{% if not loop.last %}
{% endif %}{% endfor %}

source "$(dirname "$0")/common.sh"
# ==============================================================================
# FUNCTIONS
# ==============================================================================

# --- Helper function for logging ---
log() {
  echo "--- $1 ---"
}

# --- Function to kill ziti-edge-tunnel on a remote host ---
kill_remote_ziti_tunnel() {
  local target_ip="$1"
  local ssh_user="$2"
  local ssh_pass="$3"

  log "Attempting to kill ziti-edge-tunnel on $target_ip"

  ssh "$ssh_user@$target_ip" bash <<EOF
  echo "$ssh_pass" | sudo -S bash -c '
    echo "Shutdown running ziti-edge-tunnel"
    if pgrep -f ziti-edge-tunnel >/dev/null; then
      echo "ziti-edge-tunnel is running. Killing it now..."
      pkill -f ziti-edge-tunnel
      echo "ziti-edge-tunnel has been killed."
    else
      echo "ziti-edge-tunnel is NOT running. Nothing to do."
    fi
  '
EOF
}

# ==============================================================================
# MAIN EXECUTION
# ==============================================================================

main() {
  log "Killing ziti-edge-tunnel processes on all edge machines"

  # Kill on Edge Router
  {% for edge_r in ziti_config.router.edge_router %}
  kill_remote_ziti_tunnel "{{ edge_r.edge_router_ip }}" "{{ edge_r.ssh_user }}" "{{ edge_r.ssh_pass }}"
  {% endfor %}
  # Kill on Edge App
  {% for edge_app in edge_deployment.edge %}
  kill_remote_ziti_tunnel "{{ edge_app.edge_app_ip }}" "{{ edge_app.ssh_user }}" "{{ edge_app.ssh_pass }}"
  {% endfor %}
  # Kill on Sensors
  {% for sensor in edge_deployment.sensor %}
  kill_remote_ziti_tunnel "{{ sensor.ip }}" "{{  sensor.ssh_user  }}" "{{ sensor.ssh_pass }}"
  {% endfor %}

  log "Finished attempting to kill ziti-edge-tunnel processes."

  ssh "{{ ssh_user }}@${ZITI_CONTROLLER_ROUTER_IP}" bash <<'EOF'
  log "Cleaning up Ziti resources..."

# ========== DELETE SERVICES AND CONFIGS ==========
  {% for app in edge_applications %}
    log "Deleting service and configs for: {{ app.name }}"
    ziti edge delete service-policy "{{ app.name }}-bind-policy" || true
    ziti edge delete service-policy "{{ app.name }}-dial-policy" || true
    ziti edge delete service "{{ app.name }}-service" || true
    ziti edge delete config "{{ app.name }}-intercept-config" || true
    ziti edge delete config "{{ app.name }}-host-config" || true
  {% endfor %}

# ========== DELETE IDENTITIES ==========

# ========== DELETE POLICIES ==========

  {% for policy in policies %}
    ziti edge delete {% if policy.type == "edge-router-policy" %}{{ policy.type }} "{{ policy.name }}" 
    {% else %}{{ policy.type }} "{{ policy.name }}" 
    {% endif %}
  {% endfor %}
EOF
}

main "$@"
