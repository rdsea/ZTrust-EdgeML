terraform {
  required_providers {
    google = {
      source  = "hashicorp/google"
      version = "6.8.0"
    }
  }
}

provider "google" {
  project = "{{project_name}}"
  region  = "{{region}}"
}

module "ziti_controller_router" {
  source = "./modules/gce_instance"

  name                  = "ziti-controller-router"
  machine_type          = "{{machine_type}}"
  zone                  = "{{zone}}"
  image                 = "{{image}}"
  ssh_user              = "{{ssh_user}}"
  ssh_public_key_path   = "{{ssh_public_key_path}}"
  ssh_private_key_path  = "{{ssh_private_key_path}}"
  tags                  = ["ziti", "controller"]

  provisioners = [
    {
      content     = templatefile("ziti-cloud-init.sh.tmpl", {})
      destination = "/tmp/ziti-cloud-init.sh"
    },
    {
      inline = [
        "chmod +x /tmp/ziti-cloud-init.sh",
        "sudo /tmp/ziti-cloud-init.sh"
      ]
    }
  ]
}

module "message_q" {
  source = "./modules/gce_instance"

  name                  = "cloud-messageq"
  machine_type          = "{{machine_type}}"
  zone                  = "{{zone}}"
  image                 = "{{image}}"
  ssh_user              = "{{ssh_user}}"
  ssh_public_key_path   = "{{ssh_public_key_path}}"
  ssh_private_key_path  = "{{ssh_private_key_path}}"
  tags                  = ["cloud-messageq", "ziti-app"]

  provisioners = [
    {
      inline = [
        "mkdir -p /home/{{ssh_user}}/app"
      ]
    },
    {
      source      = "../../../../applications/machine_learning/object_classification/src/database/"
      destination = "/home/{{ssh_user}}/app/"
    },
    {
      content = templatefile("ziti-mq-init.sh.tmpl", {
        ziti_edge_controller_ip = module.ziti_controller_router.network_interface[0].network_ip,
        ziti_edge_router_ip     = module.ziti_controller_router.network_interface[0].network_ip
      })
      destination = "/tmp/ziti-mq-init.sh"
    },
    {
      inline = [
        "chmod +x /tmp/ziti-mq-init.sh",
        "sudo /tmp/ziti-mq-init.sh"
      ]
    }
  ]
}

module "database" {
  source = "./modules/gce_instance"

  name                  = "cloud-db"
  machine_type          = "{{machine_type}}"
  zone                  = "{{zone}}"
  image                 = "{{image}}"
  ssh_user              = "{{ssh_user}}"
  ssh_public_key_path   = "{{ssh_public_key_path}}"
  ssh_private_key_path  = "{{ssh_private_key_path}}"
  tags                  = ["cloud-db", "ziti-app"]

  provisioners = [
    {
      content = templatefile("ziti-db-init.sh.tmpl", {
        ziti_edge_controller_ip = module.ziti_controller_router.network_interface[0].network_ip,
        ziti_edge_router_ip     = module.ziti_controller_router.network_interface[0].network_ip
      })
      destination = "/tmp/ziti-db-init.sh"
    },
    {
      inline = [
        "chmod +x /tmp/ziti-db-init.sh",
        "sudo /tmp/ziti-db-init.sh"
      ]
    }
  ]
}

module "jaeger" {
  source = "./modules/gce_instance"

  name                  = "jaeger-db"
  machine_type          = "{{machine_type}}"
  zone                  = "{{zone}}"
  image                 = "{{image}}"
  ssh_user              = "{{ssh_user}}"
  ssh_public_key_path   = "{{ssh_public_key_path}}"
  ssh_private_key_path  = "{{ssh_private_key_path}}"
  tags                  = ["jaeger-db", "ziti-metric"]

  provisioners = [
    {
      content = templatefile("ziti-db-init.sh.tmpl", {
        ziti_edge_controller_ip = module.ziti_controller_router.network_interface[0].network_ip,
        ziti_edge_router_ip     = module.ziti_controller_router.network_interface[0].network_ip
      })
      destination = "/tmp/ziti-jaeger-init.sh"
    },
    {
      inline = [
        "chmod +x /tmp/ziti-jaeger-init.sh",
      ]
        "sudo /tmp/ziti-jaeger-init.sh"
    }
  ]
}

# ------------------------------
# Shared Firewall Rules
# ------------------------------
resource "google_compute_firewall" "allow-ssh" {
  name    = "allow-ssh"
  network = "default"

  allow {
    protocol = "tcp"
    ports    = ["22"]
  }

  source_ranges = ["0.0.0.0/0"]
}

resource "google_compute_firewall" "allow-ziti" {
  name    = "allow-ziti-app"
  network = "default"

  allow {
    protocol = "tcp"
    ports    = ["1280", "3022", "443", "6262", "10080", "10000", "8440-8443"]
  }

  source_ranges = ["0.0.0.0/0"]
}

resource "google_compute_firewall" "allow-app" {
  name    = "allow-app-messq-ports"
  network = "default"

  allow {
    protocol = "tcp"
    ports    = ["5672", "27017" ]
  }

  source_ranges = ["0.0.0.0/0"]
}

resource "google_compute_firewall" "allow-jaeger" {
  name    = "allow-app-messq-ports"
  network = "default"

  allow {
    protocol = "tcp"
    ports    = ["4318" ]
  }

  source_ranges = ["0.0.0.0/0"]
}
# ------------------------------
# Outputs
# ------------------------------
output "controller_ip" {
  value = module.ziti_controller_router.network_interface[0].access_config[0].nat_ip
}
output "messageq_ip" {
  value = module.message_q.network_interface[0].access_config[0].nat_ip
}
output "database_ip" {
  value = module.database.network_interface[0].access_config[0].nat_ip
}
output "jaeger_ip" {
  value = module.jaeger.network_interface[0].access_config[0].nat_ip
}
